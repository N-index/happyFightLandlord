import{allCardNumbers as allCardNumbers}from"./allCardNumbers.mini.js";import{cardsRules as cardsRules,getCardsTypeAndMainItems as getCardsTypeAndMainItems,isBiggerThanDesktopCards as isBiggerThanDesktopCards,hasCardsBiggerThanDesktop as hasCardsBiggerThanDesktop}from"./cardRules.mini.js";const waiting=function(s){return new Promise(e=>{setTimeout(e,1e3*s)})},moveOldArrToNewArr=async function(s,t,r,d){var a=s.length;for(let e=0;e<a;e++)await waiting(d),t.push("myself"==r?{number:s[e],isSelected:!1,isSelecting:!1}:s[e]),"myself"===r&&new Audio("./asset/music/putUpCards.mp3").play();return r},app=new Vue({el:"#app",data:{audio:{bg:new Audio("./asset/music/bg.mp3"),clickButton:new Audio("./asset/music/bubble.mp3"),putCards:new Audio("./asset/music/putUpCards.mp3"),success:new Audio("./asset/music/success.mp3"),fail:new Audio("./asset/music/fail.mp3")},username:"Joker!",shuffledCards:[],landLordCardsShuffled:[],firstUserCardsShuffled:[],myselfUserCardsShuffled:[],secondUserCardsShuffled:[],firstUserCardsBindedView:[],myselfUserCardsBindedView:[],secondUserCardsBindedView:[],player:["user-left","myself","user-right"],winnerIndex:-1,grabLandlordInfo:{currentGrabTurnIndex:-1,firstGrabPlayerIndex:-1,secondGrabPlayerIndex:-1,thirdGrabPlayerIndex:-1,grabIndexRecord:null,landlordPlayerIndex:-1},putUpInfo:{currentPutUpTurnIndex:-1,firstPutUpPlayerIndex:-1,secondPutUpPlayerIndex:-1,thirdPutUpPlayerIndex:-1,putUpIndexRecord:null,history:[],bigBombNumber:0,normalBombNumber:0},countdownNumber:{grab:8,putUp:20},desktopCardsInfo:{ownerIndex:-1,cards:[],type:{},mainItems:[]},displayStatus:{isRotate:!0,welcome:!0,stage:!1,controls:!1,clock:!1,deliver:!0,grabLordland:!1,putUpGroup:!1,putUpCards:!0,notPutUpCards:!0,countdownOfGrab:!1,countdownOfPutUp:!1,result:!1},gameStatus:["beforeBeginning","afterBeginning","beforeGrabLordland","afterGrabLordland","waitingForLordland","waitingForNextUser","waitingForNextNextUser"],cardsSelectionInfo:{startIndex:0,endIndex:0,isStartSelecting:!1},temp:{snatchFn:null,notSnatchFn:null,putUpFn:null,notPutUpFn:null}},created(){this.grabLandlordInfo.firstGrabPlayerIndex=Math.floor(3*Math.random()),this.grabLandlordInfo.secondGrabPlayerIndex=(this.grabLandlordInfo.firstGrabPlayerIndex+1)%3,this.grabLandlordInfo.thirdGrabPlayerIndex=(this.grabLandlordInfo.firstGrabPlayerIndex+2)%3,this.grabLandlordInfo.currentGrabTurnIndex=this.grabLandlordInfo.firstGrabPlayerIndex,this.grabLandlordInfo.grabIndexRecord=new Set([this.grabLandlordInfo.firstGrabPlayerIndex,this.grabLandlordInfo.secondGrabPlayerIndex,this.grabLandlordInfo.thirdGrabPlayerIndex])},methods:{bubble(){this.audio.clickButton.play()},toggleBgMusic(){this.displayStatus.isRotate=!this.displayStatus.isRotate,this.audio.bg.paused?this.audio.bg.play():this.audio.bg.pause()},enterStage(){this.displayStatus.welcome=!1,this.displayStatus.controls=!0,this.displayStatus.stage=!0},async startGame(){this.displayStatus.result=!1,this.displayStatus.controls=!1,this.displayStatus.deliver=!1,this.resetGame(),this.shuffle(),await this.deliverCardsToPlayers(),this.displayStatus.countdownOfGrab=!0,this.displayStatus.countdownOfPutUp=!1,await this.grabLandlord(),this.desktopCardsInfo.ownerIndex=this.grabLandlordInfo.landlordPlayerIndex,this.displayStatus.countdownOfPutUp=!0,this.displayStatus.countdownOfGrab=!1,this.deliverCardsToLandlord(),await this.startPutUp(),this.audio.bg.pause(),this.audio.bg.currentTime=0,this.gameOver()},gameOver(){this.winnerIndex=this.putUpInfo.currentPutUpTurnIndex,this.displayStatus.result=!0,(1===this.winnerIndex?this.audio.success:this.audio.fail).play()},async startPutUp(){this.putUpInfo.firstPutUpPlayerIndex=this.grabLandlordInfo.landlordPlayerIndex,this.putUpInfo.secondPutUpPlayerIndex=(this.putUpInfo.firstPutUpPlayerIndex+1)%3,this.putUpInfo.thirdPutUpPlayerIndex=(this.putUpInfo.firstPutUpPlayerIndex+2)%3,this.putUpInfo.putUpIndexRecord=new Set([this.putUpInfo.firstPutUpPlayerIndex,this.putUpInfo.secondPutUpPlayerIndex,this.putUpInfo.thirdPutUpPlayerIndex]);let e=this.putUpInfo.firstPutUpPlayerIndex;for(;0<this.firstUserCardsBindedView.length&&0<this.secondUserCardsBindedView.length&&0<this.myselfUserCardsBindedView.length;){this.putUpInfo.currentPutUpTurnIndex=e;try{await Promise.all([this.getPutUpResult(e),this.countdownPutUp()])}catch(e){}finally{console.log("\n\n🔵🔵🔵进入下一轮🔵🔵🔵"),await waiting(1),e=(e+1)%3}}},resetGame(){this.desktopCardsInfo={ownerIndex:-1,cards:[],type:{},mainItems:[]},this.myselfUserCardsBindedView=[],this.firstUserCardsBindedView=[],this.secondUserCardsBindedView=[]},shuffle(){this.shuffledCards=allCardNumbers;for(let e=this.shuffledCards.length-1;0<e;e--){var s=Math.floor(Math.random()*(e+1));[this.shuffledCards[s],this.shuffledCards[e]]=[this.shuffledCards[e],this.shuffledCards[s]]}this.firstUserCardsShuffled=this.shuffledCards.slice(0,17),this.secondUserCardsShuffled=this.shuffledCards.slice(17,34),this.myselfUserCardsShuffled=this.shuffledCards.slice(34,-3),this.landLordCardsShuffled=this.shuffledCards.slice(-3),this.firstUserCardsShuffled.sort((e,s)=>s-e),this.secondUserCardsShuffled.sort((e,s)=>s-e),this.myselfUserCardsShuffled.sort((e,s)=>s-e)},async deliverCardsToPlayers(){await Promise.all([moveOldArrToNewArr(this.firstUserCardsShuffled,this.firstUserCardsBindedView,"one",.3),moveOldArrToNewArr(this.secondUserCardsShuffled,this.secondUserCardsBindedView,"two",.3),moveOldArrToNewArr(this.myselfUserCardsShuffled,this.myselfUserCardsBindedView,"myself",.3)])},async countdownPutUp(){for(this.countdownNumber.putUp=20;0<this.countdownNumber.putUp;)await waiting(1),this.countdownNumber.putUp--},async countdownGrab(){for(this.countdownNumber.grab=8;0<this.countdownNumber.grab;)await waiting(1),this.countdownNumber.grab--},async getGrabResult(s){this.grabLandlordInfo.currentGrabTurnIndex=s,this.displayStatus.grabLordland=!0,this.displayStatus.controls=!0;try{await this.getGrabPromise(8)}catch(e){this.grabLandlordInfo.grabIndexRecord.delete(s)}finally{this.countdownNumber.grab=-1,this.displayStatus.grabLordland=!1,this.displayStatus.controls=!1}},async getPutUpResult(e){1===e&&(this.displayStatus.putUpGroup=!0,this.displayStatus.controls=!0),this.displayStatus.clock=!0;try{await this.getPutUpPromise(20,e),this.audio.putCards.play()}catch(e){console.error(e)}finally{this.countdownNumber.putUp=-1,this.displayStatus.putUpGroup=!1,this.displayStatus.controls=!1,this.displayStatus.clock=!1}},async grabLandlord(){for(var e of this.grabLandlordInfo.grabIndexRecord)this.displayStatus.clock=!0,await Promise.all([this.getGrabResult(e),this.countdownGrab()]),this.displayStatus.clock=!1,await waiting(1);switch(this.grabLandlordInfo.grabIndexRecord.size){case 0:this.grabLandlordInfo.landlordPlayerIndex=this.grabLandlordInfo.firstGrabPlayerIndex;break;case 1:for(var s of this.grabLandlordInfo.grabIndexRecord)this.grabLandlordInfo.landlordPlayerIndex=s;break;case 2:if(this.grabLandlordInfo.grabIndexRecord.has(this.grabLandlordInfo.firstGrabPlayerIndex))if(this.displayStatus.clock=!0,await Promise.all([this.getGrabResult(this.grabLandlordInfo.firstGrabPlayerIndex),this.countdownGrab()]),this.displayStatus.clock=!1,await waiting(1),this.grabLandlordInfo.grabIndexRecord.has(this.grabLandlordInfo.firstGrabPlayerIndex))this.grabLandlordInfo.landlordPlayerIndex=this.grabLandlordInfo.firstGrabPlayerIndex;else for(var t of this.grabLandlordInfo.grabIndexRecord)this.grabLandlordInfo.landlordPlayerIndex=t;else this.displayStatus.clock=!0,await Promise.all([this.getGrabResult(this.grabLandlordInfo.secondGrabPlayerIndex),this.countdownGrab()]),this.displayStatus.clock=!1,await waiting(1),this.grabLandlordInfo.landlordPlayerIndex=this.grabLandlordInfo.grabIndexRecord.has(this.grabLandlordInfo.secondGrabPlayerIndex)?this.grabLandlordInfo.secondGrabPlayerIndex:this.grabLandlordInfo.thirdGrabPlayerIndex;break;case 3:this.displayStatus.clock=!0,await Promise.all([this.getGrabResult(this.grabLandlordInfo.firstGrabPlayerIndex),this.countdownGrab()]),this.displayStatus.clock=!1,await waiting(1),this.grabLandlordInfo.grabIndexRecord.has(this.grabLandlordInfo.firstGrabPlayerIndex)?this.grabLandlordInfo.landlordPlayerIndex=this.grabLandlordInfo.firstGrabPlayerIndex:(this.displayStatus.clock=!0,await Promise.all([this.getGrabResult(this.grabLandlordInfo.secondGrabPlayerIndex),this.countdownGrab()]),this.displayStatus.clock=!1,await waiting(1),this.grabLandlordInfo.landlordPlayerIndex=this.grabLandlordInfo.grabIndexRecord.has(this.grabLandlordInfo.secondGrabPlayerIndex)?this.grabLandlordInfo.secondGrabPlayerIndex:this.grabLandlordInfo.thirdGrabPlayerIndex)}},deliverCardsToLandlord(){this.landLordCardsShuffled.forEach(e=>{var s=1!==this.grabLandlordInfo.landlordPlayerIndex?e:{isSelected:!0,isSelecting:!1,number:e},e=1!==this.grabLandlordInfo.landlordPlayerIndex?(e,s)=>s-e:(e,s)=>s.number-e.number;[this.firstUserCardsBindedView,this.myselfUserCardsBindedView,this.secondUserCardsBindedView][this.grabLandlordInfo.landlordPlayerIndex].push(s),[this.firstUserCardsBindedView,this.myselfUserCardsBindedView,this.secondUserCardsBindedView][this.grabLandlordInfo.landlordPlayerIndex].sort(e)})},getGrabPromise(d){const a=this.$refs["snatch-btn"],n=this.$refs["not-snatch-btn"];return a.removeEventListener("click",this.temp.snatchFn),n.removeEventListener("click",this.temp.notSnatchFn),new Promise(function(e,s){var t=()=>{e(!0)},r=()=>{s(!1)};a.addEventListener("click",t),n.addEventListener("click",r),this.temp.snatchFn=t,this.temp.notSnatchFn=r,setTimeout(s,1e3*d,!1)}.bind(this))},getPutUpPromise(n,i){if(this.desktopCardsInfo.ownerIndex===i&&(this.desktopCardsInfo.cards=[],this.desktopCardsInfo.type={},this.desktopCardsInfo.mainItems=[]),1!==this.putUpInfo.currentPutUpTurnIndex)return new Promise(function(e,s){var t=this.desktopCardsInfo.ownerIndex===i,r=function(){this.putUpCards(i,t)?(this.desktopCardsInfo.ownerIndex=i,e(!0)):s(new Error("机器自动出牌，但是没牌打得过场上的牌。所以不出"))}.bind(this);setTimeout(r,3e3)}.bind(this));const o=this.$refs["put-up-btn"],l=this.$refs["not-put-up-btn"];return o.removeEventListener("click",this.temp.putUpFn),l.removeEventListener("click",this.temp.notPutUpFn),new Promise(function(s,t){var e=()=>{console.log("玩家的setTimeout函数到期，调用函数");var e=this.desktopCardsInfo.ownerIndex===i;(e?this.putUpCards:this.notPutUpCards)(i,e),(e?s:t)(e)},r=()=>{this.putUpCards(i,!1)&&(this.desktopCardsInfo.ownerIndex=i,clearTimeout(e),s(!0))},d=this.desktopCardsInfo.ownerIndex===i;let a;a=d?(this.displayStatus.notPutUpCards=!1,()=>{clearTimeout(e)}):(this.displayStatus.notPutUpCards=!0,()=>{this.notPutUpCards(i,!1),t(new Error("手动不出牌")),clearTimeout(e)}),o.addEventListener("click",r),l.addEventListener("click",a),this.temp.putUpFn=r,this.temp.notPutUpFn=a,setTimeout(e,1e3*n)}.bind(this))},mousedownHandler(e,s){this.cardsSelectionInfo.isStartSelecting=!0,this.cardsSelectionInfo.startIndex=e,this.cardsSelectionInfo.endIndex=e,s.isSelecting=!s.isSelecting},mouseupHandler(e,s){this.cardsSelectionInfo.isStartSelecting&&(this.cardsSelectionInfo.endIndex=e,this.cardsSelectionInfo.isStartSelecting=!1,this.myselfUserCardsBindedView.forEach((e,s,t)=>{e.isSelecting&&(e.isSelecting=!e.isSelecting,e.isSelected=!e.isSelected)}))},mouseenterHandler(e,s){this.cardsSelectionInfo.isStartSelecting&&(e>this.cardsSelectionInfo.endIndex&&e>=this.cardsSelectionInfo.startIndex&&(this.cardsSelectionInfo.endIndex=e,s.isSelecting=!s.isSelecting),e<this.cardsSelectionInfo.endIndex&&e>=this.cardsSelectionInfo.startIndex&&(this.myselfUserCardsBindedView[e+1].isSelecting=!this.myselfUserCardsBindedView[e+1].isSelecting,this.cardsSelectionInfo.endIndex=e),e<this.cardsSelectionInfo.endIndex&&e<=this.cardsSelectionInfo.startIndex&&(this.cardsSelectionInfo.endIndex=e,s.isSelecting=!s.isSelecting),e>this.cardsSelectionInfo.endIndex&&e<=this.cardsSelectionInfo.startIndex&&(this.myselfUserCardsBindedView[e-1].isSelecting=!this.myselfUserCardsBindedView[e-1].isSelecting,this.cardsSelectionInfo.endIndex=e))},putUpCards:function(s,e){console.log(`${s}号玩家开始选牌,isLeader为${e}`);let t;if(1===s)e&&this.myselfUserCardsBindedView.forEach((e,s,t)=>{e.isSelected=s===t.length-1}),t=this.myselfUserCardsBindedView.filter(e=>e.isSelected).map(e=>e.number);else if(e)t=[[this.firstUserCardsBindedView,this.myselfUserCardsBindedView,this.secondUserCardsBindedView][s].slice(-1)[0]];else{var r=hasCardsBiggerThanDesktop([this.firstUserCardsBindedView,this.myselfUserCardsBindedView,this.secondUserCardsBindedView][this.putUpInfo.currentPutUpTurnIndex],this.desktopCardsInfo);if(console.log("所有的可行的牌组有："),console.log(r),!r.length)return!1;t=r[r.length-1]}if(!t.length)return!1;e=getCardsTypeAndMainItems(t);if(e.type===cardsRules.INVALID)return!1;if(!isBiggerThanDesktopCards(e,this.desktopCardsInfo))return console.error("选牌没有大过上家"),!1;let d="default";[cardsRules.TRIPLE,cardsRules.SINGLE_BELT,cardsRules.DOUBLE_BELT,cardsRules.TRIPLE_BELT,cardsRules.AIRPLANE_PULL_DOUBLE,cardsRules.AIRPLANE_PULL_DOUBLE,cardsRules.NORMAL_BOMB,cardsRules.BIG_BOMB].includes(e.type)&&(d=e.type.audioFileName),e.type===cardsRules.SINGLE&&(d=`singleCard/${e.mainItems[0]}`),e.type===cardsRules.DOUBLE&&(d=`doubleCards/${e.mainItems[0]}`);r=`./asset/music/cards/${d}.mp3`;const a=new Audio(r);return a.volume=1,a.play(),[this.desktopCardsInfo.ownerIndex,this.desktopCardsInfo.cards,this.desktopCardsInfo.type,this.desktopCardsInfo.mainItems]=[s,t,e.type,e.mainItems],1!==s?t.forEach(e=>{[this.firstUserCardsBindedView,this.myselfUserCardsBindedView,this.secondUserCardsBindedView][s].splice([this.firstUserCardsBindedView,this.myselfUserCardsBindedView,this.secondUserCardsBindedView][s].indexOf(e),1)}):this.myselfUserCardsBindedView=this.myselfUserCardsBindedView.filter(e=>!e.isSelected),!0},notPutUpCards(e,s){console.log(`当前第${e}号玩家不出牌，timeout为${s}`),1===e&&this.myselfUserCardsBindedView.forEach((e,s,t)=>{e.isSelected&&(e.isSelected=!1)})}}});